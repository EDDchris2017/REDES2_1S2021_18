// source: proto/proyecto1.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.proyecto1.Asistencia', null, global);
goog.exportSymbol('proto.proyecto1.AsistenciaRecibido', null, global);
goog.exportSymbol('proto.proyecto1.ListaAsistencia', null, global);
goog.exportSymbol('proto.proyecto1.ListaReportes', null, global);
goog.exportSymbol('proto.proyecto1.ParamLista', null, global);
goog.exportSymbol('proto.proyecto1.Reporte', null, global);
goog.exportSymbol('proto.proyecto1.ReporteRecibido', null, global);
goog.exportSymbol('proto.proyecto1.StatusReq', null, global);
goog.exportSymbol('proto.proyecto1.StatusRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proyecto1.StatusReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proyecto1.StatusReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proyecto1.StatusReq.displayName = 'proto.proyecto1.StatusReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proyecto1.StatusRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proyecto1.StatusRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proyecto1.StatusRes.displayName = 'proto.proyecto1.StatusRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proyecto1.Reporte = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proyecto1.Reporte, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proyecto1.Reporte.displayName = 'proto.proyecto1.Reporte';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proyecto1.ReporteRecibido = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proyecto1.ReporteRecibido, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proyecto1.ReporteRecibido.displayName = 'proto.proyecto1.ReporteRecibido';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proyecto1.ParamLista = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proyecto1.ParamLista, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proyecto1.ParamLista.displayName = 'proto.proyecto1.ParamLista';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proyecto1.ListaReportes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proyecto1.ListaReportes.repeatedFields_, null);
};
goog.inherits(proto.proyecto1.ListaReportes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proyecto1.ListaReportes.displayName = 'proto.proyecto1.ListaReportes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proyecto1.Asistencia = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proyecto1.Asistencia, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proyecto1.Asistencia.displayName = 'proto.proyecto1.Asistencia';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proyecto1.AsistenciaRecibido = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proyecto1.AsistenciaRecibido, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proyecto1.AsistenciaRecibido.displayName = 'proto.proyecto1.AsistenciaRecibido';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proyecto1.ListaAsistencia = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proyecto1.ListaAsistencia.repeatedFields_, null);
};
goog.inherits(proto.proyecto1.ListaAsistencia, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proyecto1.ListaAsistencia.displayName = 'proto.proyecto1.ListaAsistencia';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proyecto1.StatusReq.prototype.toObject = function(opt_includeInstance) {
  return proto.proyecto1.StatusReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proyecto1.StatusReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.StatusReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    mensaje: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proyecto1.StatusReq}
 */
proto.proyecto1.StatusReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proyecto1.StatusReq;
  return proto.proyecto1.StatusReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proyecto1.StatusReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proyecto1.StatusReq}
 */
proto.proyecto1.StatusReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMensaje(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proyecto1.StatusReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proyecto1.StatusReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proyecto1.StatusReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.StatusReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMensaje();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string mensaje = 1;
 * @return {string}
 */
proto.proyecto1.StatusReq.prototype.getMensaje = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.StatusReq} returns this
 */
proto.proyecto1.StatusReq.prototype.setMensaje = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proyecto1.StatusRes.prototype.toObject = function(opt_includeInstance) {
  return proto.proyecto1.StatusRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proyecto1.StatusRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.StatusRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    mensaje: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proyecto1.StatusRes}
 */
proto.proyecto1.StatusRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proyecto1.StatusRes;
  return proto.proyecto1.StatusRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proyecto1.StatusRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proyecto1.StatusRes}
 */
proto.proyecto1.StatusRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMensaje(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proyecto1.StatusRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proyecto1.StatusRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proyecto1.StatusRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.StatusRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMensaje();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string mensaje = 1;
 * @return {string}
 */
proto.proyecto1.StatusRes.prototype.getMensaje = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.StatusRes} returns this
 */
proto.proyecto1.StatusRes.prototype.setMensaje = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proyecto1.Reporte.prototype.toObject = function(opt_includeInstance) {
  return proto.proyecto1.Reporte.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proyecto1.Reporte} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.Reporte.toObject = function(includeInstance, msg) {
  var f, obj = {
    carnet: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nombre: jspb.Message.getFieldWithDefault(msg, 2, ""),
    curso: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cuerpo: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proyecto1.Reporte}
 */
proto.proyecto1.Reporte.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proyecto1.Reporte;
  return proto.proyecto1.Reporte.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proyecto1.Reporte} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proyecto1.Reporte}
 */
proto.proyecto1.Reporte.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarnet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNombre(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurso(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCuerpo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proyecto1.Reporte.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proyecto1.Reporte.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proyecto1.Reporte} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.Reporte.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarnet();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNombre();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCurso();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCuerpo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int32 carnet = 1;
 * @return {number}
 */
proto.proyecto1.Reporte.prototype.getCarnet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proyecto1.Reporte} returns this
 */
proto.proyecto1.Reporte.prototype.setCarnet = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string nombre = 2;
 * @return {string}
 */
proto.proyecto1.Reporte.prototype.getNombre = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.Reporte} returns this
 */
proto.proyecto1.Reporte.prototype.setNombre = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string curso = 3;
 * @return {string}
 */
proto.proyecto1.Reporte.prototype.getCurso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.Reporte} returns this
 */
proto.proyecto1.Reporte.prototype.setCurso = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string cuerpo = 4;
 * @return {string}
 */
proto.proyecto1.Reporte.prototype.getCuerpo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.Reporte} returns this
 */
proto.proyecto1.Reporte.prototype.setCuerpo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proyecto1.ReporteRecibido.prototype.toObject = function(opt_includeInstance) {
  return proto.proyecto1.ReporteRecibido.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proyecto1.ReporteRecibido} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.ReporteRecibido.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: jspb.Message.getFieldWithDefault(msg, 1, ""),
    carnet: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nombre: jspb.Message.getFieldWithDefault(msg, 3, ""),
    curso: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cuerpo: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fecha: jspb.Message.getFieldWithDefault(msg, 6, ""),
    servidor: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proyecto1.ReporteRecibido}
 */
proto.proyecto1.ReporteRecibido.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proyecto1.ReporteRecibido;
  return proto.proyecto1.ReporteRecibido.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proyecto1.ReporteRecibido} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proyecto1.ReporteRecibido}
 */
proto.proyecto1.ReporteRecibido.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarnet(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNombre(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurso(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCuerpo(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFecha(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setServidor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proyecto1.ReporteRecibido.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proyecto1.ReporteRecibido.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proyecto1.ReporteRecibido} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.ReporteRecibido.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCarnet();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNombre();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurso();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCuerpo();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFecha();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getServidor();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string msg = 1;
 * @return {string}
 */
proto.proyecto1.ReporteRecibido.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.ReporteRecibido} returns this
 */
proto.proyecto1.ReporteRecibido.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 carnet = 2;
 * @return {number}
 */
proto.proyecto1.ReporteRecibido.prototype.getCarnet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proyecto1.ReporteRecibido} returns this
 */
proto.proyecto1.ReporteRecibido.prototype.setCarnet = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string nombre = 3;
 * @return {string}
 */
proto.proyecto1.ReporteRecibido.prototype.getNombre = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.ReporteRecibido} returns this
 */
proto.proyecto1.ReporteRecibido.prototype.setNombre = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string curso = 4;
 * @return {string}
 */
proto.proyecto1.ReporteRecibido.prototype.getCurso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.ReporteRecibido} returns this
 */
proto.proyecto1.ReporteRecibido.prototype.setCurso = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string cuerpo = 5;
 * @return {string}
 */
proto.proyecto1.ReporteRecibido.prototype.getCuerpo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.ReporteRecibido} returns this
 */
proto.proyecto1.ReporteRecibido.prototype.setCuerpo = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string fecha = 6;
 * @return {string}
 */
proto.proyecto1.ReporteRecibido.prototype.getFecha = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.ReporteRecibido} returns this
 */
proto.proyecto1.ReporteRecibido.prototype.setFecha = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string servidor = 7;
 * @return {string}
 */
proto.proyecto1.ReporteRecibido.prototype.getServidor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.ReporteRecibido} returns this
 */
proto.proyecto1.ReporteRecibido.prototype.setServidor = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proyecto1.ParamLista.prototype.toObject = function(opt_includeInstance) {
  return proto.proyecto1.ParamLista.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proyecto1.ParamLista} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.ParamLista.toObject = function(includeInstance, msg) {
  var f, obj = {
    carnet: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proyecto1.ParamLista}
 */
proto.proyecto1.ParamLista.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proyecto1.ParamLista;
  return proto.proyecto1.ParamLista.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proyecto1.ParamLista} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proyecto1.ParamLista}
 */
proto.proyecto1.ParamLista.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarnet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proyecto1.ParamLista.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proyecto1.ParamLista.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proyecto1.ParamLista} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.ParamLista.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarnet();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string carnet = 1;
 * @return {string}
 */
proto.proyecto1.ParamLista.prototype.getCarnet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.ParamLista} returns this
 */
proto.proyecto1.ParamLista.prototype.setCarnet = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proyecto1.ListaReportes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proyecto1.ListaReportes.prototype.toObject = function(opt_includeInstance) {
  return proto.proyecto1.ListaReportes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proyecto1.ListaReportes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.ListaReportes.toObject = function(includeInstance, msg) {
  var f, obj = {
    listaList: jspb.Message.toObjectList(msg.getListaList(),
    proto.proyecto1.ReporteRecibido.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proyecto1.ListaReportes}
 */
proto.proyecto1.ListaReportes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proyecto1.ListaReportes;
  return proto.proyecto1.ListaReportes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proyecto1.ListaReportes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proyecto1.ListaReportes}
 */
proto.proyecto1.ListaReportes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proyecto1.ReporteRecibido;
      reader.readMessage(value,proto.proyecto1.ReporteRecibido.deserializeBinaryFromReader);
      msg.addLista(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proyecto1.ListaReportes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proyecto1.ListaReportes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proyecto1.ListaReportes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.ListaReportes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proyecto1.ReporteRecibido.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ReporteRecibido lista = 1;
 * @return {!Array<!proto.proyecto1.ReporteRecibido>}
 */
proto.proyecto1.ListaReportes.prototype.getListaList = function() {
  return /** @type{!Array<!proto.proyecto1.ReporteRecibido>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proyecto1.ReporteRecibido, 1));
};


/**
 * @param {!Array<!proto.proyecto1.ReporteRecibido>} value
 * @return {!proto.proyecto1.ListaReportes} returns this
*/
proto.proyecto1.ListaReportes.prototype.setListaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proyecto1.ReporteRecibido=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proyecto1.ReporteRecibido}
 */
proto.proyecto1.ListaReportes.prototype.addLista = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proyecto1.ReporteRecibido, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proyecto1.ListaReportes} returns this
 */
proto.proyecto1.ListaReportes.prototype.clearListaList = function() {
  return this.setListaList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proyecto1.Asistencia.prototype.toObject = function(opt_includeInstance) {
  return proto.proyecto1.Asistencia.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proyecto1.Asistencia} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.Asistencia.toObject = function(includeInstance, msg) {
  var f, obj = {
    carnet: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nombre: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nombreevento: jspb.Message.getFieldWithDefault(msg, 3, ""),
    idevento: jspb.Message.getFieldWithDefault(msg, 4, 0),
    extencion: jspb.Message.getFieldWithDefault(msg, 5, ""),
    base64: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proyecto1.Asistencia}
 */
proto.proyecto1.Asistencia.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proyecto1.Asistencia;
  return proto.proyecto1.Asistencia.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proyecto1.Asistencia} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proyecto1.Asistencia}
 */
proto.proyecto1.Asistencia.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarnet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNombre(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNombreevento(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdevento(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtencion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBase64(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proyecto1.Asistencia.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proyecto1.Asistencia.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proyecto1.Asistencia} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.Asistencia.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarnet();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNombre();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNombreevento();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIdevento();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getExtencion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBase64();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 carnet = 1;
 * @return {number}
 */
proto.proyecto1.Asistencia.prototype.getCarnet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proyecto1.Asistencia} returns this
 */
proto.proyecto1.Asistencia.prototype.setCarnet = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string nombre = 2;
 * @return {string}
 */
proto.proyecto1.Asistencia.prototype.getNombre = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.Asistencia} returns this
 */
proto.proyecto1.Asistencia.prototype.setNombre = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nombreEvento = 3;
 * @return {string}
 */
proto.proyecto1.Asistencia.prototype.getNombreevento = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.Asistencia} returns this
 */
proto.proyecto1.Asistencia.prototype.setNombreevento = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 idEvento = 4;
 * @return {number}
 */
proto.proyecto1.Asistencia.prototype.getIdevento = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proyecto1.Asistencia} returns this
 */
proto.proyecto1.Asistencia.prototype.setIdevento = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string extencion = 5;
 * @return {string}
 */
proto.proyecto1.Asistencia.prototype.getExtencion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.Asistencia} returns this
 */
proto.proyecto1.Asistencia.prototype.setExtencion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string base64 = 6;
 * @return {string}
 */
proto.proyecto1.Asistencia.prototype.getBase64 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.Asistencia} returns this
 */
proto.proyecto1.Asistencia.prototype.setBase64 = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proyecto1.AsistenciaRecibido.prototype.toObject = function(opt_includeInstance) {
  return proto.proyecto1.AsistenciaRecibido.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proyecto1.AsistenciaRecibido} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.AsistenciaRecibido.toObject = function(includeInstance, msg) {
  var f, obj = {
    carnet: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nombre: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nombreevento: jspb.Message.getFieldWithDefault(msg, 3, ""),
    idevento: jspb.Message.getFieldWithDefault(msg, 4, 0),
    extencion: jspb.Message.getFieldWithDefault(msg, 5, ""),
    base64: jspb.Message.getFieldWithDefault(msg, 6, ""),
    fecha: jspb.Message.getFieldWithDefault(msg, 7, ""),
    servidor: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proyecto1.AsistenciaRecibido}
 */
proto.proyecto1.AsistenciaRecibido.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proyecto1.AsistenciaRecibido;
  return proto.proyecto1.AsistenciaRecibido.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proyecto1.AsistenciaRecibido} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proyecto1.AsistenciaRecibido}
 */
proto.proyecto1.AsistenciaRecibido.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCarnet(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNombre(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNombreevento(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIdevento(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtencion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBase64(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFecha(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setServidor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proyecto1.AsistenciaRecibido.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proyecto1.AsistenciaRecibido.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proyecto1.AsistenciaRecibido} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.AsistenciaRecibido.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarnet();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNombre();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNombreevento();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIdevento();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getExtencion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBase64();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFecha();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getServidor();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional int32 carnet = 1;
 * @return {number}
 */
proto.proyecto1.AsistenciaRecibido.prototype.getCarnet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proyecto1.AsistenciaRecibido} returns this
 */
proto.proyecto1.AsistenciaRecibido.prototype.setCarnet = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string nombre = 2;
 * @return {string}
 */
proto.proyecto1.AsistenciaRecibido.prototype.getNombre = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.AsistenciaRecibido} returns this
 */
proto.proyecto1.AsistenciaRecibido.prototype.setNombre = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nombreEvento = 3;
 * @return {string}
 */
proto.proyecto1.AsistenciaRecibido.prototype.getNombreevento = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.AsistenciaRecibido} returns this
 */
proto.proyecto1.AsistenciaRecibido.prototype.setNombreevento = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 idEvento = 4;
 * @return {number}
 */
proto.proyecto1.AsistenciaRecibido.prototype.getIdevento = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proyecto1.AsistenciaRecibido} returns this
 */
proto.proyecto1.AsistenciaRecibido.prototype.setIdevento = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string extencion = 5;
 * @return {string}
 */
proto.proyecto1.AsistenciaRecibido.prototype.getExtencion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.AsistenciaRecibido} returns this
 */
proto.proyecto1.AsistenciaRecibido.prototype.setExtencion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string base64 = 6;
 * @return {string}
 */
proto.proyecto1.AsistenciaRecibido.prototype.getBase64 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.AsistenciaRecibido} returns this
 */
proto.proyecto1.AsistenciaRecibido.prototype.setBase64 = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string fecha = 7;
 * @return {string}
 */
proto.proyecto1.AsistenciaRecibido.prototype.getFecha = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.AsistenciaRecibido} returns this
 */
proto.proyecto1.AsistenciaRecibido.prototype.setFecha = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string servidor = 8;
 * @return {string}
 */
proto.proyecto1.AsistenciaRecibido.prototype.getServidor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.proyecto1.AsistenciaRecibido} returns this
 */
proto.proyecto1.AsistenciaRecibido.prototype.setServidor = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proyecto1.ListaAsistencia.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proyecto1.ListaAsistencia.prototype.toObject = function(opt_includeInstance) {
  return proto.proyecto1.ListaAsistencia.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proyecto1.ListaAsistencia} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.ListaAsistencia.toObject = function(includeInstance, msg) {
  var f, obj = {
    listaList: jspb.Message.toObjectList(msg.getListaList(),
    proto.proyecto1.AsistenciaRecibido.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proyecto1.ListaAsistencia}
 */
proto.proyecto1.ListaAsistencia.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proyecto1.ListaAsistencia;
  return proto.proyecto1.ListaAsistencia.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proyecto1.ListaAsistencia} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proyecto1.ListaAsistencia}
 */
proto.proyecto1.ListaAsistencia.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proyecto1.AsistenciaRecibido;
      reader.readMessage(value,proto.proyecto1.AsistenciaRecibido.deserializeBinaryFromReader);
      msg.addLista(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proyecto1.ListaAsistencia.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proyecto1.ListaAsistencia.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proyecto1.ListaAsistencia} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proyecto1.ListaAsistencia.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proyecto1.AsistenciaRecibido.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AsistenciaRecibido lista = 1;
 * @return {!Array<!proto.proyecto1.AsistenciaRecibido>}
 */
proto.proyecto1.ListaAsistencia.prototype.getListaList = function() {
  return /** @type{!Array<!proto.proyecto1.AsistenciaRecibido>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proyecto1.AsistenciaRecibido, 1));
};


/**
 * @param {!Array<!proto.proyecto1.AsistenciaRecibido>} value
 * @return {!proto.proyecto1.ListaAsistencia} returns this
*/
proto.proyecto1.ListaAsistencia.prototype.setListaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proyecto1.AsistenciaRecibido=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proyecto1.AsistenciaRecibido}
 */
proto.proyecto1.ListaAsistencia.prototype.addLista = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proyecto1.AsistenciaRecibido, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proyecto1.ListaAsistencia} returns this
 */
proto.proyecto1.ListaAsistencia.prototype.clearListaList = function() {
  return this.setListaList([]);
};


goog.object.extend(exports, proto.proyecto1);
